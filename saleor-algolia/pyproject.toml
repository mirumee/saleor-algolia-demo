[tool.poetry]
name = "saleor-algolia"
version = "1.0.0-rc3"
description = "An Algolia extension of the Saleor platform"
authors = ["Mirumee Software <hello@mirumee.com>"]

[tool.poetry.dependencies]
aiohttp = "^3.7.3"
algoliasearch = "^2.5.0"
python = "^3.8"
starlette = "^0.14"
uvicorn = "^0.14.0"
Jinja2 = "^2.11.2"
aiofiles = "^0.6.0"
PyJWT = "^1.7.1"
asyncpg = "^0.21.0"
SQLAlchemy = "^1.3.22"
psycopg2-binary = "^2.8.6"
alembic = "^1.4.3"
fastapi = "^0.65.2"
click = "^8.0.1"
rich = "^10.3.0"
gql = {version = "3.0.0a6", extras = ["aiohttp"], allow-prereleases = true}
orjson = "^3.6.0"
gunicorn = "^20.1.0"
sentry-sdk = "^1.4.1"
saleor-app = {git = "https://github.com/saleor/saleor-app-framework-python.git", rev = "feature/extensions"}
tqdm = "^4.62.3"

[tool.poetry.dev-dependencies]
black = "^20.8b1"
flake8 = "^3.8.4"
isort = "^5.6.4"
mypy = "^0.790"
pytest = "^6.1.2"
pytest-asyncio = "^0.14.0"
pytest-xdist = "^2.3.0"
pre-commit = "^2.9.0"
vcrpy = "^4.1.1"
pytest-vcr = "^1.0.2"
snapshottest = "^0.6.0"
aiosqlite = "^0.16.0"
asynctest = "^0.13.0"
ipdb = "^0.13.9"
tox = "^3.24.0"
tox-poetry = "^0.4.0"

[tool.poetry.scripts]
saleor-algolia = 'saleor_algolia.console:cli'

[tool.black]
target_version = ['py38']
include = '\.pyi?$'
exclude = '''
/(\.git/
  |\.eggs
  |\.hg
  |__pycache__
  |\.cache
  |\.ipynb_checkpoints
  |\.mypy_cache
  |\.pytest_cache
  |\.tox
  |\.venv
  |node_modules
  |_build
  |buck-out
  |build
  |dist
  |media
  |infrastructure
  |templates
  |locale
  |migrations
  |'.*/snapshots/.*
)/
'''

[tool.isort]
known_third_party = "aiohttp,algoliasearch,jwt,pytest,snapshottest,starlette,tortoise,uvicorn"
profile = "black"
multi_line_output = 3
include_trailing_comma = true
line_length = 88
known_first_party = "saleor_algolia"
skip = '''
/(
    */migrations/.*
)/
'''

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.tox]
legacy_tox_ini = """
[tox]
# envlist = py39, lint, coverage  # TODO: enable coverage once tests are here
envlist = py39, lint

[testenv]
description = run the test driver with {basepython}
deps = .[develop]
commands =
    pytest src/saleor_algolia

[testenv:lint]
description = check the code style
basepython = python3.9
commands =
    black --check src/saleor_algolia
    isort --check src/saleor_algolia
    flake8 src/saleor_algolia

[testenv:reformat]
description = check the code style
basepython = python3.9
commands =
    black src/saleor_algolia
    isort src/saleor_algolia
    flake8 src/saleor_algolia

[testenv:coverage]
description = [run locally after tests]: combine coverage data and create report
deps =
    coverage
skip_install = True
commands =
    coverage erase
    coverage run --source="saleor_algolia" -p -m pytest src/saleor_algolia
    coverage combine
    coverage report --fail-under=90
depends =
    py38,
    py39,
parallel_show_output = True
"""
